name: Dependency Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/package.json'
      - 'backend/package-lock.json'
      - '.github/workflows/dependency-check.yml'

jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install dependency-cruiser
        run: npm install -g dependency-cruiser
      
      - name: Check for unused dependencies
        run: npx depcheck
      
      - name: Check for duplicate dependencies
        run: npm dedupe --dry-run
      
      - name: Analyze dependency tree
        run: depcruise --exclude "node_modules" --output-type dot src | dot -T svg > dependency-graph.svg
      
      - name: Upload dependency graph
        uses: actions/upload-artifact@v3
        with:
          name: dependency-graph
          path: ./backend/dependency-graph.svg
      
      - name: Check for vulnerable packages
        run: npm audit --production
        continue-on-error: true
      
      - name: Comment on PR with dependency information
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');
            
            // Run depcheck to find unused dependencies
            let unusedDeps = '';
            try {
              const depcheckOutput = execSync('cd ./backend && npx depcheck --json').toString();
              const depcheckResult = JSON.parse(depcheckOutput);
              
              if (depcheckResult.dependencies.length > 0) {
                unusedDeps = `
                ### Unused Dependencies
                
                The following dependencies appear to be unused and could potentially be removed:
                
                ${depcheckResult.dependencies.map(dep => `- \`${dep}\``).join('\n')}
                `;
              } else {
                unusedDeps = '### Unused Dependencies\n\n✅ No unused dependencies found!';
              }
            } catch (error) {
              unusedDeps = '### Unused Dependencies\n\n⚠️ Error checking for unused dependencies';
              console.error(error);
            }
            
            // Get package changes
            let packageChanges = '';
            try {
              // Get the diff of package.json
              const diffOutput = execSync('git diff origin/${{ github.base_ref }} -- backend/package.json').toString();
              
              if (diffOutput) {
                packageChanges = `
                ### Package Changes
                
                <details>
                  <summary>View package.json changes</summary>
                
                \`\`\`diff
                ${diffOutput}
                \`\`\`
                </details>
                `;
              } else {
                packageChanges = '### Package Changes\n\nNo changes to package.json detected.';
              }
            } catch (error) {
              packageChanges = '### Package Changes\n\n⚠️ Error checking for package changes';
              console.error(error);
            }
            
            // Find any comments already made by this action
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('## Dependency Analysis')
            );
            
            const commentBody = `## Dependency Analysis
            
            ${unusedDeps}
            
            ${packageChanges}
            
            ### Recommendations
            
            - Review any unused dependencies and consider removing them
            - Check for outdated packages with \`npm outdated\`
            - Keep dependencies up to date with security patches
            
            [View full dependency graph](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            } 